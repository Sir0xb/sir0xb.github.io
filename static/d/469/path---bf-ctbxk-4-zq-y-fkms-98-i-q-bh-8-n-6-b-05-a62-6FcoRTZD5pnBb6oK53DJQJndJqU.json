{"data":{"markdownRemark":{"html":"<pre><code class=\"language-java\">package com.siro.tools;\n\nimport java.security.*;\n\nimport javax.crypto.*;\n\npublic class DESPlus {\n\n    public static String encrypt(String strKey, String strIn) throws Exception {\n        Security.addProvider(new com.sun.crypto.provider.SunJCE());\n        Key key = getKey(strKey);\n\n        Cipher encryptCipher = Cipher.getInstance(\"DES\");\n        encryptCipher.init(Cipher.ENCRYPT_MODE, key);\n\n        return byteArr2HexStr(encryptCipher.doFinal((strIn.getBytes())));\n    }\n\n    public static String decrypt(String strKey, String strIn) throws Exception {\n        Security.addProvider(new com.sun.crypto.provider.SunJCE());\n        Key key = getKey(strKey);\n\n        Cipher decryptCipher = Cipher.getInstance(\"DES\");\n        decryptCipher.init(Cipher.DECRYPT_MODE, key);\n        return new String(decryptCipher.doFinal((hexStr2ByteArr(strIn))));\n    }\n\n    private static Key getKey(String strKey) throws Exception {\n\n        byte[] arrBTmp = strKey.getBytes();    //获取字节流\n        byte[] arrB = new byte[8];             //创建一个空的8位字节数组（默认值为0）\n\n        //将原始字节数组转换为8位\n        for(int i = 0; i &#x3C; arrBTmp.length &#x26;&#x26; i &#x3C; arrB.length; i++) {\n            arrB[i] = arrBTmp[i];\n        }\n\n        // 生成密钥\n        Key key = new javax.crypto.spec.SecretKeySpec(arrB, \"DES\");\n\n        return key;\n    }\n\n    private static String byteArr2HexStr(byte[] arrB) throws Exception {\n        int iLen = arrB.length;\n        // 每个byte用两个字符才能表示，所以字符串的长度是数组长度的两倍\n        StringBuffer sb = new StringBuffer(iLen * 2);\n        for (int i = 0; i &#x3C; iLen; i++) {\n            int intTmp = arrB[i];\n            // 把负数转换为正数\n            while (intTmp &#x3C; 0) {\n                intTmp = intTmp + 256;\n            }\n            // 小于0F的数需要在前面补0\n            if (intTmp &#x3C; 16) {\n                sb.append(\"0\");\n            }\n            sb.append(Integer.toString(intTmp, 16));\n        }\n        return sb.toString();\n    }\n\n    private static byte[] hexStr2ByteArr(String strIn) throws Exception {\n        byte[] arrB = strIn.getBytes();\n        int iLen = arrB.length;\n\n        // 两个字符表示一个字节，所以字节数组长度是字符串长度除以2\n        byte[] arrOut = new byte[iLen / 2];\n        for (int i = 0; i &#x3C; iLen; i = i + 2) {\n            String strTmp = new String(arrB, i, 2);\n            arrOut[i / 2] = (byte) Integer.parseInt(strTmp, 16);\n        }\n        return arrOut;\n    }\n\n    public static void main(String[] args) {\n        try {\n            String Code = \"中B123\";\n            String key = \"1q2w3e4r\";\n            String codE;\n\n            codE = DESPlus.encrypt(key, Code);\n\n            System.out.println(\"加密前的字串：\" + Code);\n            System.out.println(\"加密所用密钥：\" + key);\n            System.out.println(\"加密后的字串：\" + codE);\n            System.out.println(\"解密后的字串：\" + DESPlus.decrypt(key, codE));\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre>\n<hr>","frontmatter":{"path":"/BfCTBXK4ZqYFkms98iQBh8n6","title":"JAVA DES 加密算法","author":"Sir0xb","date":"2011-07-29 09:45:47 +0800"}}},"pageContext":{}}