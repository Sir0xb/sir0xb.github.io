{"data":{"markdownRemark":{"html":"<table>\n<thead>\n<tr>\n<th>项目</th>\n<th>校验</th>\n<th>参数</th>\n<th>事件</th>\n<th>页面跳转</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>action</td>\n<td>ok</td>\n<td>不传入当前控件</td>\n<td>当铵钮被单击时产生事件.提交表单</td>\n<td>返回跳转的页面导向，根据配置文件跳转</td>\n</tr>\n<tr>\n<td>actionListener</td>\n<td>ok</td>\n<td>传入当前控件</td>\n<td>当铵钮被单击时产生事件.提交表单</td>\n<td>无返回值，返回本页面</td>\n</tr>\n<tr>\n<td>ValueChangeListener</td>\n<td>ok</td>\n<td>传入当前控件,无返回值</td>\n<td>不提交表单(需指定其onchange/onclick=“submit\"才自动提交表单</td>\n<td>返回 action, 动态生成跳转</td>\n</tr>\n</tbody>\n</table>\n<!--more-->\n<br/>\n<h4>绑定ActionListener:</h4>\n<pre><code class=\"language-java\">HtmlCommandButton bt = new HtmlCommandButton();\nbt.setId(ID);\nClass[] c = {ActionEvent.class};\nMethodBinding ListenerBinding = FacesContext.getCurrentInstance().getApplication().createMethodBinding(\"#{pendingBean.SetHidden}\", c);\nbt.setActionListener(ListenerBinding);\n</code></pre>\n<h4>绑定Action:</h4>\n<pre><code class=\"language-java\">HtmlCommandButton bt = new HtmlCommandButton();\nbt.setId(ID);\nExpressionFactory expFactory = FacesContext.getCurrentInstance().getApplication().getExpressionFactory();\nELContext elContext = FacesContext.getCurrentInstance().getELContext();\nMethodExpression expression = expFactory.createMethodexpression_r(elContext, \"#{pendingBean.formList}\", String.class, new Class[]{});\nbt.setActionexpression_r(expression);\n</code></pre>\n<p>当需要进行跳转并需要得到组件时，可采用绑定ActionListener再绑定Action的方式。\n在处理ActionListener时，将组件信息写入Hidden域里。\n在处理Action时，从Hidden域里提取出组件信息即可。</p>\n<hr>","frontmatter":{"path":"/iEAktJWyXOiNEzstmexGc3nN","title":"JSF中action 和 actionListener的区别","date":"2011-10-21 15:46:50 +0800","comments":true,"categories":"programming","author":"Sir0xb","tags":["jsf","action","actionListener"]}}},"pageContext":{}}