{"pageContext":{"group":[{"node":{"id":"8da0ef59-a17b-519c-8597-102602d6d49c","html":"<p>前几天用 jekyll 搭建了一个 github 博客，不过看着凌乱的代码，整个人都不好了。\n于是各种折腾之下用 Hexo 重新高了一套出来。Hexo 是基于 NodeJS 的博客框架，来自宝岛台湾的很不错的框架哦。\n不多废话，开始工作~~</p>\n<h3>安装</h3>\n<h4>安装 Hexo</h4>\n<pre><code class=\"language-ruby\">$ npm install -g hexo\n</code></pre>\n<h4>创建博客目录</h4>\n<pre><code class=\"language-ruby\">$ hexo init &#x3C;folder>\n</code></pre>\n<!--more-->\n<h4>安装 <a target=\"_blank\" href=\"https://github.com/hexojs/hexo/wiki/Plugins\">插件</a> 和 <a target=\"_blank\" href=\"https://github.com/hexojs/hexo/wiki/Themes\">主题</a></h4>\n<ul>\n<li>插件</li>\n</ul>\n<pre><code class=\"language-ruby\">$ npm install &#x3C;plugin-name> --save\n</code></pre>\n<ul>\n<li>主题</li>\n</ul>\n<pre><code class=\"language-ruby\">$ npm clone &#x3C;repository> themes/&#x3C;theme-name>\n</code></pre>\n<p>修改 _config.yml 文件应用主题</p>\n<pre><code class=\"language-ruby\">...\ntheme: &#x3C;theme-name>\n...\n</code></pre>\n<h2> </h2>\n<h3>应用</h3>\n<h4>测试</h4>\n<pre><code class=\"language-ruby\">$ hexo server\n</code></pre>\n<p>可以访问 <a href=\"http://localhost:4000\">http://localhost:4000</a> 查看效果</p>\n<h4>生成静态文件</h4>\n<pre><code class=\"language-ruby\">$ hexo generate\n</code></pre>\n<h2> </h2>\n<h3>部署</h3>\n<p>修改 _config.yml 文件</p>\n<pre><code class=\"language-ruby\">...\ndeploy:\n  type: git\n  repository: https://github.com/&#x3C;gitId>/&#x3C;gitId>.github.io.git\n  branch: master\n  message: hexo deploy\n...\n</code></pre>\n<p>通过命令提交部署</p>\n<pre><code class=\"language-ruby\">$ hexo deploy\n</code></pre>\n<hr>","frontmatter":{"path":"/7mE1JVlg7iWCfnmRH5Kn0Z4u","title":"基于 hexo 创建 github 博客","date":"2015-05-15 18:24:38 +0800","comments":true,"categories":"programming","author":"Sir0xb","tags":["github","hexo"]},"excerpt":"前几天用 jekyll 搭建了一个 github 博客，不过看着凌乱的代码，整个人都不好了。\n于是各种折腾之下用 Hexo 重新高了一套出来。Hexo 是基于 NodeJS 的博客框架，来自宝岛台湾的很不错的框架哦。\n不多废话，开始工作~~ 安装 安装 Hexo…"}},{"node":{"id":"572e4c3b-c109-5f79-90e9-c3fad612f2da","html":"<h3>定义构造方法 createFun</h3>\n<pre><code class=\"language-coffeescript\">__help = ->\n    @__help__\n\n\nextend = (child, parent)->\n    child[key] = parent[key] for key of parent when parent.hasOwnProperty key\n    return child\n\nextend extend,\n    help    : __help\n    __help__: \"\"\"\nexnted 函数用于扩展对象\n第一个参数：需要扩展的对象\n第二个参数：需要增加的属性\n返回：被扩展后的对象\n\"\"\"\n\n\ncreateFun = (newFun, helpStr)->\n    extend newFun,\n        help    : __help\n        __help__: helpStr\n\nextend createFun,\n    help    : __help\n    __help__: \"\"\"\ncreateFun 函数用于创建带帮助函数的函数\n第一个参数：函数体\n第二个参数：帮助说明\n\"\"\"\n</code></pre>\n<!--more-->\n<h2> </h2>\n<h3>使用方式</h3>\n<pre><code class=\"language-coffeescript\">lpad = createFun (pram...)->\n    switch pram.length\n        when 0, 1 then return false\n        when 2\n            while \"#{pram[0]}\".length &#x3C; pram[1]\n                pram[0] = \" #{pram[0]}\"\n        else\n            while \"#{pram[0]}\".length &#x3C; pram[1]\n                pram[0] = \"#{pram[2]}#{pram[0]}\"\n\n    return pram[0]\n,\n                 \"\"\"\nlpad 补位函数(从左)\n第一个参数：需要补位的字符串\n第二个参数：最终补位后的长度\n第三个[可选]：用于补位的字符串，默认空格\n\"\"\"\n\n\nrpad = createFun (pram...)->\n    switch pram.length\n        when 0, 1 then return false\n        when 2\n            while \"#{pram[0]}\".length &#x3C; pram[1]\n                pram[0] = \"#{pram[0]} \"\n        else\n            while \"#{pram[0]}\".length &#x3C; pram[1]\n                pram[0] = \"#{pram[0]}#{pram[2]}\"\n    return pram[0]\n,\n                 \"\"\"\nlpad 补位函数(从右)\n第一个参数：需要补位的字符串\n第二个参数：最终补位后的长度\n第三个[可选]：用于补位的字符串，默认空格\n\"\"\"\n</code></pre>\n<blockquote>\n<p>想要知道函数怎么用，只需要 <code>[functionName].help()</code> 即可\n不过比起文档与库分开的模式，库的大小会增加，不过确实很方便</p>\n</blockquote>\n<hr>","frontmatter":{"path":"/Z90NYS5qNhYPeFuWYIq9OZpf","title":"函数自带说明文档模式","date":"2015-05-11 14:24:38 +0800","comments":true,"categories":"programming","author":"Sir0xb","tags":["coffee"]},"excerpt":"定义构造方法 createFun   使用方式 想要知道函数怎么用，只需要  [functionName].help()  即可\n不过比起文档与库分开的模式，库的大小会增加，不过确实很方便"}},{"node":{"id":"b4d181c0-4462-559e-8da6-2c2ee1ad58c8","html":"<h3>1.github 上创建 [username].github.io 工程</h3>\n<h2> </h2>\n<h3>2.检查是否有 Ruby，没有自行安装</h3>\n<pre><code class=\"language-ruby\">$ ruby --version\n</code></pre>\n<h2> </h2>\n<h3>3.安装 Bundler</h3>\n<pre><code class=\"language-ruby\">$ sudo gem install bundler\n</code></pre>\n<!--more-->\n<p>如果遇到无法安装的情况，需要添加其他资源，推荐淘宝的。</p>\n<pre><code class=\"language-ruby\">$ gem sources -l\n$ gem sources --remove https://rubygems.org\n$ gem sources -a https://ruby.taobao.org\n$ gem sources -l\n</code></pre>\n<h2> </h2>\n<h3>4.安装 Jekyll</h3>\n<pre><code class=\"language-ruby\">$ sudo gem install github-pages\n</code></pre>\n<h2> </h2>\n<h3>5.进入本地 [username].github.io 工程，创建 Gemfile 文件，添加</h3>\n<pre><code class=\"language-ruby\">$ gem 'github-pages'\n</code></pre>\n<h2> </h2>\n<h3>6.运行 jekyll 查看效果</h3>\n<pre><code class=\"language-ruby\">$ bundle exec jekyll serve --watch\n</code></pre>\n<p>添加 --watch 能即使看到文件的变化<br/>\n浏览器访问 <a href=\"http://localhost:4000\">http://localhost:4000</a> 可以访问当前目录 index.html 文件</p>\n<hr>","frontmatter":{"path":"/UOPviWrgplyuzTXh7jQZxSHl","title":"基于 Jekyll 搭建 github 博客","date":"2015-05-11 12:24:38 +0800","comments":true,"categories":"programming","author":"Sir0xb","tags":["github","jekyll"]},"excerpt":"1.github 上创建  username .github.io 工程   2.检查是否有 Ruby，没有自行安装   3.安装 Bundler 如果遇到无法安装的情况，需要添加其他资源，推荐淘宝的。   4.安装 Jekyll   5.进入本地  username…"}},{"node":{"id":"f16744a6-464f-5ef1-8e2b-dd4107573494","html":"<p>关掉虚拟机。</p>\n<p><code>VM->Settings</code>，选中 <code>Hard Disk</code>，在右边出现了 <code>Utilities</code> 的一个下拉栏，OK，点击它选择 Map，这时弹出一个 <code>Map Virtual Disk</code> 窗口，选择系统分区，将 <code>Open file in read-only mode</code> 的默认选择去掉，这时会有个警告的提示框。</p>\n<p>本地系统就可以看到虚拟机硬盘盘符，我的是Z盘。</p>\n<p>剩下操作跟忘记系统密码拆硬盘进行的操作时一样的。</p>\n<p>拷贝 <code>z:\\windows\\repair</code> 下的 sam 覆盖 <code>z:\\windows\\system32\\config\\sam</code></p>\n<p>开启虚拟机电源，硬盘盘符自动消失，不用输入密码可进入系统。</p>\n<p>但：配置全部丢失，桌面东西会丢失。</p>\n<hr>","frontmatter":{"path":"/uS9Nuh6kLfA4I802eR2hDfG6","title":"VM虚拟机忘记密码","date":"2013-03-20 16:47:17 +0800","comments":true,"categories":"programming","author":"Sir0xb","tags":["windows","vmware"]},"excerpt":"关掉虚拟机。 VM->Settings ，选中  Hard Disk ，在右边出现了  Utilities  的一个下拉栏，OK，点击它选择 Map，这时弹出一个  Map Virtual Disk  窗口，选择系统分区，将  Open file in read-only…"}},{"node":{"id":"3733be06-da80-5a7a-ad64-319a0ffc1e18","html":"<p>打开注册表</p>\n<pre><code class=\"language-bash\">HKEY_CURRENT_USER\\Console\n</code></pre>\n<p>找到 <code>CodePage</code></p>\n<p>修改成 16进制 3a8 或是 10进制 936</p>\n<p>重启 CMD 窗口</p>\n<hr>","frontmatter":{"path":"/0Gz64YqFTaL6Pi0j9BEJp0CW","title":"cmd 中文乱码","date":"2013-02-06 17:51:50 +0800","comments":true,"categories":"programming","author":"Sir0xb","tags":["windows","cmd"]},"excerpt":"打开注册表 找到  CodePage 修改成 16进制 3a8 或是 10进制 936 重启 CMD 窗口"}}],"pathPrefix":"","first":false,"last":false,"index":15,"pageCount":29,"additionalContext":{}}}